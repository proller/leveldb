ss
- Stats

db
- Maybe implement DB::BulkDeleteForRange(start_key, end_key)
  that would blow away files whose ranges are entirely contained
  within [start_key..end_key]?  For Chrome, deletion of obsolete
  object stores, etc. can be done in the background anyway, so
  probably not that important.
- There have been requests for MultiGet.

port
- windows port should use atomic_pointer.h
- snappy is platform independent, factorize out

After a range is completely deleted, what gets rid of the
corresponding files if we do no future changes to that range.  Make
the conditions for triggering compactions fire in more situations?
